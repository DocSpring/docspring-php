<?php
/**
 * ClientTest
 * PHP version 8.1
 *
 * @category Class
 * @package  DocSpring
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DocSpring API
 *
 * Use DocSpring's API to programmatically fill out PDF forms, convert HTML to PDFs, merge PDFs, or request legally binding e-signatures.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.16.0-DOCSPRING
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DocSpring\Test\Api;

use \DocSpring\Configuration;
use \DocSpring\ApiException;
use \DocSpring\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ClientTest Class Doc Comment
 *
 * @category Class
 * @package  DocSpring
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ClientTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addFieldsToTemplate
     *
     * Add new fields to a Template.
     *
     */
    public function testAddFieldsToTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for batchGeneratePdfs
     *
     * Generate multiple PDFs.
     *
     */
    public function testBatchGeneratePdfs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for combinePdfs
     *
     * Merge submission PDFs, template PDFs, or custom files.
     *
     */
    public function testCombinePdfs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for copyTemplate
     *
     * Copy a template.
     *
     */
    public function testCopyTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCustomFileFromUpload
     *
     * Create a new custom file from a cached S3 upload.
     *
     */
    public function testCreateCustomFileFromUpload()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDataRequestEvent
     *
     * Create a new event for emailing a signee a request for signature.
     *
     */
    public function testCreateDataRequestEvent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDataRequestToken
     *
     * Create a new data request token for form authentication.
     *
     */
    public function testCreateDataRequestToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createFolder
     *
     * Create a folder.
     *
     */
    public function testCreateFolder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createHtmlTemplate
     *
     * Create a new HTML template.
     *
     */
    public function testCreateHtmlTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPdfTemplate
     *
     * Create a new PDF template with a form POST file upload.
     *
     */
    public function testCreatePdfTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPdfTemplateFromUpload
     *
     * Create a new PDF template from a cached S3 file upload.
     *
     */
    public function testCreatePdfTemplateFromUpload()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteFolder
     *
     * Delete a folder.
     *
     */
    public function testDeleteFolder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTemplate
     *
     * Delete a template.
     *
     */
    public function testDeleteTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for expireCombinedSubmission
     *
     * Expire a combined submission.
     *
     */
    public function testExpireCombinedSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for expireSubmission
     *
     * Expire a PDF submission.
     *
     */
    public function testExpireSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generatePdf
     *
     * Generate a PDF.
     *
     */
    public function testGeneratePdf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generatePreview
     *
     * Generate a preview PDF for partially completed data requests.
     *
     */
    public function testGeneratePreview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCombinedSubmission
     *
     * Check the status of a combined submission (merged PDFs).
     *
     */
    public function testGetCombinedSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDataRequest
     *
     * Look up a submission data request.
     *
     */
    public function testGetDataRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFullTemplate
     *
     * Fetch the full attributes for a PDF template.
     *
     */
    public function testGetFullTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPresignUrl
     *
     * Get a presigned S3 URL for direct file upload.
     *
     */
    public function testGetPresignUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubmission
     *
     * Check the status of a PDF.
     *
     */
    public function testGetSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubmissionBatch
     *
     * Check the status of a submission batch job.
     *
     */
    public function testGetSubmissionBatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTemplate
     *
     * Check the status of an uploaded template.
     *
     */
    public function testGetTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTemplateSchema
     *
     * Fetch the JSON schema for a template.
     *
     */
    public function testGetTemplateSchema()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCombinedSubmissions
     *
     * Get a list of all combined submissions.
     *
     */
    public function testListCombinedSubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listFolders
     *
     * Get a list of all folders.
     *
     */
    public function testListFolders()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSubmissions
     *
     * List all submissions.
     *
     */
    public function testListSubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTemplateSubmissions
     *
     * List all submissions for a given template.
     *
     */
    public function testListTemplateSubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTemplates
     *
     * Get a list of all templates.
     *
     */
    public function testListTemplates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for moveFolderToFolder
     *
     * Move a folder.
     *
     */
    public function testMoveFolderToFolder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for moveTemplateToFolder
     *
     * Move Template to folder.
     *
     */
    public function testMoveTemplateToFolder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for publishTemplateVersion
     *
     * Publish a template version.
     *
     */
    public function testPublishTemplateVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for renameFolder
     *
     * Rename a folder.
     *
     */
    public function testRenameFolder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreTemplateVersion
     *
     * Restore a template version.
     *
     */
    public function testRestoreTemplateVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testAuthentication
     *
     * Test authentication.
     *
     */
    public function testTestAuthentication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDataRequest
     *
     * Update a submission data request.
     *
     */
    public function testUpdateDataRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTemplate
     *
     * Update a Template.
     *
     */
    public function testUpdateTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTemplateDocument
     *
     * Update a template's document with a form POST file upload.
     *
     */
    public function testUpdateTemplateDocument()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTemplateDocumentFromUpload
     *
     * Update a template's document with a cached S3 file upload.
     *
     */
    public function testUpdateTemplateDocumentFromUpload()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
